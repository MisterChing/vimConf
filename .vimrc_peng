"""Start of Vundle
set nocompatible
filetype off 
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"改变默认<Leader>键映射
let mapleader = ','
let g:mapleader = ','

"plugin config
Plugin 'VundleVim/Vundle.vim'

"plugin for the python autocompletion
Plugin 'davidhalter/jedi-vim'

"plugin for the quick jump within the code
Plugin 'EasyMotion'
let g:EasyMotion_leader_key = '<Leader>'

"plugin for the quick code commented
Plugin 'scrooloose/nerdcommenter'
let g:NERDSpaceDelims = 1

"plugin for the quick find the files in the project directory
Plugin 'kien/ctrlp.vim'

"syntax checker
Plugin 'scrooloose/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_mode_map = {
        \ "mode": "active",
        \ "active_filetypes": [],
        \ "passive_filetypes": ["go"] } 
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1


"plugin for the information bar
Plugin 'bling/vim-airline'
set laststatus=2
"不检测行尾空格,trailing-white-space
let g:airline#extensions#whitespace#enabled = 0
"使用tab打开文件
let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = ''

"plugin for the tag list bar
Plugin 'majutsushi/tagbar'
nmap <leader>m :TagbarToggle<CR>
let g:tagbar_width = 40
"auto run tagbar when use vim
"autocmd VimEnter * nested :call tagbar#autoopen(1)
"tagbar window postion
let g:tagbar_right = 1
"let g:tagbar_left = 1

Plugin 'scrooloose/nerdtree'
nmap <C-N> :NERDTreeToggle<CR>
"nerdtree window position 'left' or 'right'
let NERDTreeWinPos = 'left'
"nerdtree window Size
let NERDTreeWinSize = 30
let NERDTreeShowFiles = 1

Plugin 'Shougo/neocomplete.vim'
let g:neocomplete#enable_at_startup = 1

" Plugin 'valloric/YouCompleteMe'
" let g:ycm_autoclose_preview_window_after_completion = 1
" let g:ycm_autoclose_preview_window_after_insertion = 1
" let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'

Plugin 'SirVer/ultisnips'
"let g:UltiSnipsSnippetDirectories=['UltiSnips']
"let g:UltiSnipsSnippetsDir = '~/.vim/bundle/vim-snippets/UltiSnips'
let g:UltiSnipsExpandTrigger = '<C-j>'
let g:UltiSnipsListSnippets = '<C-k>'
let g:UltiSnipsJumpForwardTrigger = '<C-h>'
let g:UltiSnipsJumpBackwardTrigger = '<C-l>'

Plugin 'honza/vim-snippets'

Plugin 'kien/rainbow_parentheses.vim'
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0
" BufRead,BufWinEnter,BufNewFile * RainbowParenthesesToggle
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

Plugin 'Yggdroot/indentLine'


Plugin 'Raimondi/delimitMate'
let g:delimitMate_expand_cr = 1
let g:delimitMate_expand_space = 1

Plugin 'junegunn/vim-easy-align'
" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

Plugin 'fatih/vim-go.git'
"let g:go_fmt_fail_silently = 1
let g:go_list_type = "quickfix"

Plugin 'rizzatti/dash.vim'
nmap <silent> <leader>z <Plug>DashSearch

Plugin 'rust-lang/rust.vim'

Plugin 'keith/swift.vim'

Plugin 'moll/vim-node'

Plugin 'ternjs/tern_for_vim'




call vundle#end()            " required
filetype plugin indent on    " required
"""End of Vundle

 
"""Start of base config
"字符编码
"vim编码设置为utf-8,支持中文输入
set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
set encoding=utf-8
set langmenu=zh_CN.utf-8
 
"语法和缩进
"自动缩进，即为新行自动添加与当前行同等的缩进
set autoindent
"类似C语言程序的缩进
set cindent
set showmatch
"检索时忽略大小写
set ignorecase
set hlsearch
"显示行号
set nu
 
"tab相关设置
"开启时，在行首按TAB将加入shiftwidth个空格，否则加入tabstop个空格。
set smarttab
"是将输入的TAB自动展开成空格。开启后要输入TAB，需要Ctrl-V<TAB>
set expandtab
set tabstop=4
"设定 << 和 >> 命令移动时的宽度为 4
set shiftwidth=4
 
"颜色方案
set t_Co=256
"使用molokai 配色方案
colorscheme molokai
"set background=light
"colorscheme solarized
"为光标所在行加下划线,molokai配色下为高亮一行
set cursorline
"语法高亮
syntax on
"backspace键
set backspace=indent,eol,start
"mouse
set mouse=a
"buffer margin
set scrolloff=5
set showcmd
 


"Code folding
" set foldenable
" set foldmethod=syntax
"代码块折叠
"autocmd FileType python set foldmethod=indent
"autocmd FileType xml set foldmethod=indent
"autocmd FileType dia set foldmethod=indent
"
"
"run
au BufRead *.py map <buffer> <Leader>r :w<CR>:!/usr/bin/env python3 % <CR>
au BufRead *.php map <buffer> <Leader>r :w<CR>:!/usr/bin/env php % <CR>
au BufRead *.js map <buffer> <Leader>r :w<CR>:!/usr/bin/env node % <CR>
au BufRead *.go map <buffer> <Leader>r :w<CR>:GoRun % <CR>
au BufRead *.swift map <buffer> <Leader>r :w<CR>:!/usr/bin/env swift % <CR>

"""End of base config
